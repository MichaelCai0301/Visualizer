/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Vladimir E. (https://sketchfab.com/Room_42)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/truncated-icosahedron-901dff5801e94ffaa0f7e1e29dcf13a4
Title: Truncated Icosahedron
*/
import { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame} from '@react-three/fiber';
import truncated_icosahedron from '../assets/3d/shapes/truncated_icosahedron.glb';
import {a} from '@react-spring/three';

const T_Icosahedron = (props) => {
    const t_icosRef = useRef();
    const { nodes, materials } = useGLTF(truncated_icosahedron);
    const [moveAway, setMoveAway] = useState(false);

    useFrame(({clock}) => {
        // Rotation animation
        t_icosRef.current.rotation.x += 0.005;
        t_icosRef.current.rotation.y += 0.005;
        // Moving away animation
        if (moveAway) {
            if (t_icosRef.current.position.y <= -300) {
                setMoveAway(false);
                // Octahedron is in charge of switching pages!
            } else if (moveAway) {
                t_icosRef.current.position.y -= Math.min(1.9**(3*(clock.elapsedTime)), 10);
                t_icosRef.current.position.x += Math.min(1.9**(1.5*(clock.elapsedTime)), 10);
            }
        }
    });

    useEffect(() => {
        if (props.clicked) {
            setMoveAway(true);
            props.setClicked(false);
        }
    },[props.clicked])
    
    return (
        <a.group ref={t_icosRef} {...props}>
            <mesh
                geometry={nodes.Object_2.geometry}
                material={materials['FrontColor.002']}
                rotation={[-Math.PI / 2, 0, 0]}
                onPointerEnter={() => props.setHovered(3)}
                onPointerLeave={() => props.setHovered(0)}
            >
                <meshPhongMaterial emissive={props.color} emissiveIntensity={props.hovered == 3 ? 4 : 0}/>
            </mesh>
        </a.group>
    );
}

export default T_Icosahedron;
