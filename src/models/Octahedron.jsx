/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: chandlerklebs (https://sketchfab.com/chandlerklebs)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/octahedron-4fcfa8c0265746448e92e314dccd364c
Title: Octahedron
*/

import { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame, useThree} from '@react-three/fiber';
import octahedron from '../assets/3d/shapes/octahedron.glb';
import {a} from '@react-spring/three';
import { EffectComposer, Bloom } from '@react-three/postprocessing';
import { useNavigate } from "react-router-dom";


const Octahedron = (props) => {
    const octahedronRef = useRef();
    const { nodes, materials } = useGLTF(octahedron);
    const [moveAway, setMoveAway] = useState(false);

    useFrame(({clock}) => {
        // Rotation animation
        octahedronRef.current.rotation.x += 0.005;
        octahedronRef.current.rotation.y += 0.005;
        if (moveAway) {
            if (octahedronRef.current.position.y <= -100) {
                setMoveAway(false);
                // CODE TO MOVE TO OTHER PAGE
                console.log('---', props.typeSelected);
                props.navigateFunction(props.typeSelected);
            } else if (moveAway) {
                // Moving away animation
                octahedronRef.current.position.y -= Math.min(1.9**(1.5*(clock.elapsedTime)), 10);
                octahedronRef.current.position.x += Math.min(1.9**(3*(clock.elapsedTime)), 10);
            }
        }
    });
    // Trigger moving away animation
    useEffect(() => {
        if (props.clicked) {
            setMoveAway(true);
            props.setClicked(false);
        }
    },[props.clicked])
    return (
        <a.group ref={octahedronRef} {...props}>
            <mesh
                geometry={nodes.Object_2.geometry}
                material={materials["Scene_-_Root"]}
                rotation={[-Math.PI / 2, 0, 0]}
                onPointerEnter={() => props.setHovered(1)}
                onPointerLeave={() => props.setHovered(0)}
            >
                <meshPhongMaterial emissive={0x59571A} emissiveIntensity={props.hovered == 1 ? 4 : 0}/>
            </mesh>
        </a.group>
    );
}

export default Octahedron;
